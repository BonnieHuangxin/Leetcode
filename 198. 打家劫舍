class Solution(object):
    def rob(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        #动态规划问题
        #思路：当前最大的累计收益= max(前一家的收益，前前一家的收益加上当前的收益)
        if len(nums) == 0:
            return 0
        if len(nums) == 1:
            return nums[0]
       
        if len(nums) == 2:
            return max(nums[0],nums[1])
        
        dp = {}
        dp[0] = nums[0]
        dp[1] = max(nums[0], nums[1])
        
               
        for i in range(2,len(nums)):
            dp[i] = max(dp[i-1],dp[i-2]+nums[i])
        return dp[i]
