# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def mergeTwoLists(self, l1: ListNode, l2: ListNode) -> ListNode:
        #思想：建立一个新链表将两个列表的元素大小进行比较,依次加入到链表中
        #1.建立空列表，从头结点为当前节点
        head = ListNode(None)
        cur = head
        #2.当l1,l2存在时，不断比较链表中元素大小
        while l1 or l2:
            #3. 当l1或者l2为空的情况，接在空链表后面
            if not l1:
                cur.next = l2
                break
            if not l2:
                cur.next = l1
                break
            #如果l1,l2都存在，比较链表中元素，将小元素插在新链表后面
            if l1.val < l2.val:
                cur.next = l1
                #当前节点向后移
                cur = cur.next
                #l1减少一个节点
                l1 = l1.next
            else:
                cur.next = l2
                cur = cur.next
                l2 = l2.next
        #返回头结点之后的链表啊
        return head.next
